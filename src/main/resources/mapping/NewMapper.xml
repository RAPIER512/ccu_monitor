<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.courage.news.dao.NewMapper">
	<resultMap id="BaseResultMap" type="com.courage.news.model.New">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.courage.news.model.New"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, author, time, img, type
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from new
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from new
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.courage.news.model.New">
		insert into new (id, title, author,
		time, img, type, content
		)
		values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR},
		#{time,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.courage.news.model.New">
		insert into new
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				#{author,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.courage.news.model.New">
		update new
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.courage.news.model.New">
		update new
		set title = #{title,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		time = #{time,jdbcType=VARCHAR},
		img = #{img,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.courage.news.model.New">
		update new
		set title = #{title,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		time = #{time,jdbcType=VARCHAR},
		img = #{img,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--================================================================================ -->


	<select id="selectBytype" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from new
		where type = #{0}
	</select>
</mapper>