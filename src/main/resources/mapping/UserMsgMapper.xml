<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.courage.ccu_monitor.dao.UserMsgMapper">
	<resultMap id="BaseResultMap" type="com.courage.ccu_monitor.model.UserMsg">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
		<result column="email_num" property="emailNum" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, age, phone_num, email_num, address, account, create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user_msg
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user_msg
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.courage.ccu_monitor.model.UserMsg">
		insert into t_user_msg (id, user_name, age,
		phone_num, email_num, address,
		account, create_time)
		values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{phoneNum,jdbcType=VARCHAR}, #{emailNum,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.courage.ccu_monitor.model.UserMsg">
		insert into t_user_msg
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="phoneNum != null">
				phone_num,
			</if>
			<if test="emailNum != null">
				email_num,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="phoneNum != null">
				#{phoneNum,jdbcType=VARCHAR},
			</if>
			<if test="emailNum != null">
				#{emailNum,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.courage.ccu_monitor.model.UserMsg">
		update t_user_msg
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="phoneNum != null">
				phone_num = #{phoneNum,jdbcType=VARCHAR},
			</if>
			<if test="emailNum != null">
				email_num = #{emailNum,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.courage.ccu_monitor.model.UserMsg">
		update t_user_msg
		set user_name = #{userName,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		phone_num = #{phoneNum,jdbcType=VARCHAR},
		email_num = #{emailNum,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		account = #{account,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>